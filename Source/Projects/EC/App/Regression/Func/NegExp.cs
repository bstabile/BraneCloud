using System;
using BraneCloud.Evolution.EC.GP;

namespace BraneCloud.Evolution.EC.App.Regression.Func
{
    /// <summary>
    /// Copyright 2012 by Sean Luke
    /// Licensed under the Academic Free License version 3.0
    /// See the file "LICENSE" for more information
    /// 
    /// NegExp.java
    /// 
    /// Created: Mon Apr 23 17:15:35 EDT 2012
    /// By: Sean Luke
    /// 
    /// <p/>This function appears in the Vladislavleva-B and Vladislavleva-C function sets, and is e^(-x)
    /// <p/>E. Vladislavleva, G. Smits, and D. Den Hertog. Order of Nonlinearity as a Complexity Measure 
    /// for Models Generated by Symbolic Regression via Pareto Genetic Programming. <i>IEEE Trans EC,</i> 13(2):333Ð349, 2009. */
    /// </summary>
    public class NegExp : GPNode
    {
        public override string ToString() { return "negexp"; }

        public override int ExpectedChildren { get { return 1; } }

        public override void Eval(IEvolutionState state,
            int thread,
            GPData input,
            ADFStack stack,
            GPIndividual individual,
            IProblem problem)
        {
            var rd = ((RegressionData)(input));

            Children[0].Eval(state, thread, input, stack, individual, problem);
            rd.x = Math.Exp(0 - rd.x);
        }
    }
}


